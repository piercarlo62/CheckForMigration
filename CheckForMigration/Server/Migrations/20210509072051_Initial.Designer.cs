// <auto-generated />
using System;
using System.Collections.Generic;
using CheckForMigration.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CheckForMigration.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210509072051_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasPostgresEnum(null, "day_of_week", new[] { "sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday" })
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "6.0.0-preview.3.21201.2")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("FidaBlazorNet6.Shared.Email.Verification.VerifiedEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text");

                    b.Property<DateTime>("VerificationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("VerificationResponseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VerificationResponseId");

                    b.ToTable("VerifiedEmails");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.Login.OldPassword", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("oldPasswordHash")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("UserId");

                    b.ToTable("OldPassword");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ContactId")
                        .HasColumnType("integer");

                    b.Property<string>("CountryDialCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberType")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("UserId");

                    b.ToTable("PhoneNumber");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnableWorkTaskSetting")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("ImapPassword")
                        .HasColumnType("text");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("boolean");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("text");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.UserAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AddressType")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Country")
                        .HasColumnType("integer");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Flat")
                        .HasColumnType("text");

                    b.Property<int?>("LeadId")
                        .HasColumnType("integer");

                    b.Property<string>("NameId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Staircase")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LeadId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("UserAddress");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.UserIdentityNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DocumentCopyUrl")
                        .HasColumnType("text");

                    b.Property<string>("DocumentIssuer")
                        .HasColumnType("text");

                    b.Property<string>("DocumentThumbnail")
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpiringDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("IssuingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IssuingPlace")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserIdentityNumber");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.UserMailAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MailType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserMailAddress");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.UserProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<bool>("IsNavMinified")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNavOpen")
                        .HasColumnType("boolean");

                    b.Property<string>("LastPageVisited")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Csv.CsvMapTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CsvTemplateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CsvValuesNumber")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("SheetTemplateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CsvMapTemplates");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Csv.CsvTempItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClassPropertyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<int>("MapTemplateId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MapTemplateId");

                    b.ToTable("CsvTempItem");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.General.Reports.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ChartType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("ReportType")
                        .HasColumnType("integer");

                    b.Property<bool>("Shared")
                        .HasColumnType("boolean");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.General.Reports.ReportChartSeries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BearFillColor")
                        .HasColumnType("text");

                    b.Property<double>("BinInterval")
                        .HasColumnType("double precision");

                    b.Property<int>("BoxPlotMode")
                        .HasColumnType("integer");

                    b.Property<string>("BullFillColor")
                        .HasColumnType("text");

                    b.Property<double>("CardinalSplineTension")
                        .HasColumnType("double precision");

                    b.Property<string>("Close")
                        .HasColumnType("text");

                    b.Property<double>("ColumnSpacing")
                        .HasColumnType("double precision");

                    b.Property<double>("ColumnWidth")
                        .HasColumnType("double precision");

                    b.Property<string>("DashArray")
                        .HasColumnType("text");

                    b.Property<int>("DrawType")
                        .HasColumnType("integer");

                    b.Property<bool>("EnableComplexProperty")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnableSolidCandles")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnableTooltip")
                        .HasColumnType("boolean");

                    b.Property<string>("Fill")
                        .HasColumnType("text");

                    b.Property<string>("High")
                        .HasColumnType("text");

                    b.Property<string>("HighlightStyle")
                        .HasColumnType("text");

                    b.Property<double[]>("IntermediateSumIndexes")
                        .HasColumnType("double precision[]");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("boolean");

                    b.Property<int>("LegendShape")
                        .HasColumnType("integer");

                    b.Property<string>("Low")
                        .HasColumnType("text");

                    b.Property<double>("MaxRadius")
                        .HasColumnType("double precision");

                    b.Property<double>("MinRadius")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NegativeFillColor")
                        .HasColumnType("text");

                    b.Property<string>("NonHighlightStyle")
                        .HasColumnType("text");

                    b.Property<double>("Opacity")
                        .HasColumnType("double precision");

                    b.Property<string>("Open")
                        .HasColumnType("text");

                    b.Property<string>("PointColorMapping")
                        .HasColumnType("text");

                    b.Property<int>("ReportId")
                        .HasColumnType("integer");

                    b.Property<int>("SegmentAxis")
                        .HasColumnType("integer");

                    b.Property<string>("SelectionStyle")
                        .HasColumnType("text");

                    b.Property<bool>("ShowMean")
                        .HasColumnType("boolean");

                    b.Property<bool>("ShowNormalDistribution")
                        .HasColumnType("boolean");

                    b.Property<string>("Size")
                        .HasColumnType("text");

                    b.Property<int>("SplineType")
                        .HasColumnType("integer");

                    b.Property<string>("StackingGroup")
                        .HasColumnType("text");

                    b.Property<double[]>("SumIndexes")
                        .HasColumnType("double precision[]");

                    b.Property<string>("SummaryFillColor")
                        .HasColumnType("text");

                    b.Property<string>("TooltipFormat")
                        .HasColumnType("text");

                    b.Property<string>("TooltipMappingName")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UnSelectedStyle")
                        .HasColumnType("text");

                    b.Property<bool>("Visible")
                        .HasColumnType("boolean");

                    b.Property<string>("Volume")
                        .HasColumnType("text");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.Property<string>("XAxisName")
                        .HasColumnType("text");

                    b.Property<string>("XName")
                        .HasColumnType("text");

                    b.Property<string>("YAxisName")
                        .HasColumnType("text");

                    b.Property<string>("YName")
                        .HasColumnType("text");

                    b.Property<int>("ZOrder")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportChartSeries");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.General.Reports.ReportRole", b =>
                {
                    b.Property<int>("ReportId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("ReportId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("ReportRole");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Appellative")
                        .HasColumnType("integer");

                    b.Property<int>("CompanyPosition")
                        .HasColumnType("integer");

                    b.Property<string>("FamilyName")
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<int>("LeadId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LeadId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<string>("IndustrySector")
                        .HasColumnType("text");

                    b.Property<DateTime>("LeadPurchasingDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.ProtocolTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Prefix")
                        .HasColumnType("text");

                    b.Property<int>("ProtProgNumber")
                        .HasColumnType("integer");

                    b.Property<int>("ProtocolType")
                        .HasColumnType("integer");

                    b.Property<string>("Suffix")
                        .HasColumnType("text");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.ToTable("ProtocolTemplate");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskAutomation.TaskAutomation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("TriggerEvent")
                        .HasColumnType("integer");

                    b.Property<int>("WorkTaskId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkTaskId");

                    b.ToTable("TaskAutomations");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskAutomation.TaskAutomationTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("TriggerEvent")
                        .HasColumnType("integer");

                    b.Property<int>("WorkTaskTemplateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkTaskTemplateId");

                    b.ToTable("TaskAutomationTemplate");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskAutomation.WorkTasksActions.WT_Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ActionType")
                        .HasColumnType("integer");

                    b.Property<string>("ClassPropertyName")
                        .HasColumnType("text");

                    b.Property<string>("ClassPropertyValue")
                        .HasColumnType("text");

                    b.Property<string>("ClassType")
                        .HasColumnType("text");

                    b.Property<double>("Delay")
                        .HasColumnType("double precision");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("EmailMessageId")
                        .HasColumnType("integer");

                    b.Property<int>("EmailTemplateId")
                        .HasColumnType("integer");

                    b.Property<bool>("Executed")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ExecutionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TaskAutomationId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkTaskTemplateId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkTaskType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmailMessageId")
                        .IsUnique();

                    b.HasIndex("TaskAutomationId");

                    b.ToTable("WT_Action");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskAutomation.WorkTasksActions.WT_ActionTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ActionType")
                        .HasColumnType("integer");

                    b.Property<string>("ClassPropertyName")
                        .HasColumnType("text");

                    b.Property<string>("ClassPropertyValue")
                        .HasColumnType("text");

                    b.Property<string>("ClassType")
                        .HasColumnType("text");

                    b.Property<double>("Delay")
                        .HasColumnType("double precision");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text");

                    b.Property<int>("EmailTemplateId")
                        .HasColumnType("integer");

                    b.Property<int>("TaskAutomationTemplateId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkTaskTemplateId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkTaskType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TaskAutomationTemplateId");

                    b.ToTable("WT_ActionTemplate");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskTemplates.TaskDropItemTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("IsDefaultValue")
                        .HasColumnType("boolean");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ItemValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TaskFieldTemplateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TaskFieldTemplateId");

                    b.ToTable("TaskDropItemTemplate");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskTemplates.TaskFieldTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FieldType")
                        .HasColumnType("integer");

                    b.Property<string>("FieldValue")
                        .HasColumnType("text");

                    b.Property<bool>("FillWithCurrentUser")
                        .HasColumnType("boolean");

                    b.Property<bool>("Mandatory")
                        .HasColumnType("boolean");

                    b.Property<bool>("MandatoryForResult")
                        .HasColumnType("boolean");

                    b.Property<bool>("NeedValidEmail")
                        .HasColumnType("boolean");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<bool>("ReadOnly")
                        .HasColumnType("boolean");

                    b.Property<int>("WorkTaskTemplateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkTaskTemplateId");

                    b.ToTable("TaskFieldTemplate");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskTemplates.WorkTaskTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("TaskTemplateName")
                        .HasColumnType("text");

                    b.Property<int>("TaskType")
                        .HasColumnType("integer");

                    b.Property<int>("TmkSheetTemplateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TmkSheetTemplateId");

                    b.ToTable("WorkTaskTemplates");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.TaskField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FieldType")
                        .HasColumnType("integer");

                    b.Property<string>("FieldValue")
                        .HasColumnType("text");

                    b.Property<int>("WorkTaskId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkTaskId");

                    b.ToTable("TaskField");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.WT_Email.WtEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<bool>("Executed")
                        .HasColumnType("boolean");

                    b.Property<bool>("ExecutionCleared")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ExecutionClearedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Importance")
                        .HasColumnType("integer");

                    b.Property<string>("MessageId")
                        .HasColumnType("text");

                    b.Property<List<string>>("MessageIds")
                        .HasColumnType("text[]");

                    b.Property<bool>("NeedDeliveredReceipt")
                        .HasColumnType("boolean");

                    b.Property<bool>("NeedReadReceipt")
                        .HasColumnType("boolean");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<int>("WorkTaskId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkTaskId")
                        .IsUnique();

                    b.ToTable("WtEmails");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.WorkTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DueOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<int?>("EmailTemplateId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("End")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TaskType")
                        .HasColumnType("integer");

                    b.Property<int>("TemplateId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkSheetId")
                        .HasColumnType("integer");

                    b.Property<bool>("WtChanged")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkSheetId");

                    b.ToTable("WorkTasks");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasksGeneralParameters.WorkTaskParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("integer");

                    b.Property<bool>("FromAdmin")
                        .HasColumnType("boolean");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ValidityEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ValidityStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int[]>("WeekWorkDays")
                        .HasColumnType("integer[]");

                    b.Property<int>("WorkTaskType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WorkTaskParameter");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasksGeneralParameters.WorkWindow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("End")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("Start")
                        .HasColumnType("interval");

                    b.Property<int>("WorkTaskParameterId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkTaskParameterId");

                    b.ToTable("WorkWindow");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.AssignmentReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ReasonText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReasonValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TmkSheetTemplateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TmkSheetTemplateId");

                    b.ToTable("AssignmentReason");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.Layout.TmkLayoutColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ColumnSize")
                        .HasColumnType("integer");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<int>("LayoutRowId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LayoutRowId");

                    b.ToTable("TmkLayoutColumn");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.Layout.TmkLayoutRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<int>("TmkLayoutId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TmkLayoutId");

                    b.ToTable("TmkLayoutRow");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.Layout.TmkLayoutTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("LayoutName")
                        .HasColumnType("text");

                    b.Property<int>("TmkTemplateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TmkTemplateId");

                    b.ToTable("TmkLayoutTemplates");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkFieldSelectValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("IsDefaultValue")
                        .HasColumnType("boolean");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ItemValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TmkSheetFieldId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TmkSheetFieldId");

                    b.ToTable("TmkFieldSelectValue");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkSheetField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DefaultValue")
                        .HasColumnType("text");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FieldType")
                        .HasColumnType("integer");

                    b.Property<bool>("FillWithCurrentUser")
                        .HasColumnType("boolean");

                    b.Property<bool>("Mandatory")
                        .HasColumnType("boolean");

                    b.Property<bool>("NeedValidEmail")
                        .HasColumnType("boolean");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<bool>("ReadOnly")
                        .HasColumnType("boolean");

                    b.Property<int?>("SheetTemplateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SheetTemplateId");

                    b.ToTable("TmkSheetFields");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkSheetTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("FinalTaskType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ProtNumTempId")
                        .HasColumnType("integer");

                    b.Property<int?>("RouteAddressMapId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProtNumTempId");

                    b.HasIndex("RouteAddressMapId");

                    b.ToTable("TmkSheetTemplates");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkTemplateRole", b =>
                {
                    b.Property<int>("TemplateId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("TemplateId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("TmkTemplateRole");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Protocol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("ScheduledForMeeting")
                        .HasColumnType("boolean");

                    b.Property<int>("TemplateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("WorkSheets");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheetAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AssigneeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AssignmentDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("AssignmentEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("AssignmentEndReason")
                        .HasColumnType("text");

                    b.Property<string>("AssignmentReason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("UserSelectedToWork")
                        .HasColumnType("boolean");

                    b.Property<int>("WorkSheetId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("WorkSheetId");

                    b.ToTable("WorkSheetAssignments");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheetField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EmailCheckStatus")
                        .HasColumnType("integer");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FieldType")
                        .HasColumnType("integer");

                    b.Property<string>("FieldValue")
                        .HasColumnType("text");

                    b.Property<bool>("FillWithCurrentUser")
                        .HasColumnType("boolean");

                    b.Property<bool>("Mandatory")
                        .HasColumnType("boolean");

                    b.Property<bool>("NeedValidEmail")
                        .HasColumnType("boolean");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<int?>("WorkSheetId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkSheetId");

                    b.ToTable("WorkSheetFields");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheetFieldSelectItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("IsDefaultValue")
                        .HasColumnType("boolean");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ItemValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("WorkSheetFieldId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkSheetFieldId");

                    b.ToTable("WorkSheetFieldSelectItem");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Menus.AppDynamicNavMenu", b =>
                {
                    b.Property<int>("AppId")
                        .HasColumnType("integer");

                    b.Property<string>("Class")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool>("Multi")
                        .HasColumnType("boolean");

                    b.Property<string>("Style")
                        .HasColumnType("text");

                    b.HasKey("AppId");

                    b.ToTable("AppDynamicNavMenus");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Menus.NavMenuItem", b =>
                {
                    b.Property<int>("AppId")
                        .HasColumnType("integer");

                    b.Property<bool>("AllowSection")
                        .HasColumnType("boolean");

                    b.Property<int?>("AppDynamicNavMenuAppId")
                        .HasColumnType("integer");

                    b.Property<string>("Class")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Href")
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Style")
                        .HasColumnType("text");

                    b.Property<int?>("SubMenuListAppId")
                        .HasColumnType("integer");

                    b.HasKey("AppId");

                    b.HasIndex("AppDynamicNavMenuAppId");

                    b.HasIndex("SubMenuListAppId");

                    b.ToTable("NavMenuItems");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Menus.SubMenu", b =>
                {
                    b.Property<int>("AppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AppDynamicNavMenuAppId")
                        .HasColumnType("integer");

                    b.Property<string>("Class")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("Expanded")
                        .HasColumnType("boolean");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool>("Selected")
                        .HasColumnType("boolean");

                    b.Property<string>("Style")
                        .HasColumnType("text");

                    b.Property<int?>("SubMenuListAppId1")
                        .HasColumnType("integer");

                    b.HasKey("AppId");

                    b.HasIndex("AppDynamicNavMenuAppId");

                    b.HasIndex("SubMenuListAppId1");

                    b.ToTable("SubMenus");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Menus.SubMenuHeader", b =>
                {
                    b.Property<int>("AppId")
                        .HasColumnType("integer");

                    b.Property<string>("Class")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Style")
                        .HasColumnType("text");

                    b.HasKey("AppId");

                    b.ToTable("SubMenuHeaders");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Menus.SubMenuList", b =>
                {
                    b.Property<int>("AppId")
                        .HasColumnType("integer");

                    b.Property<string>("Class")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Style")
                        .HasColumnType("text");

                    b.HasKey("AppId");

                    b.ToTable("SubMenuLists");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Route.FidaUserRouteToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("FidaUserRouteToken");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Route.FidaVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BreakDuration")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("BreakEnd")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("BreakStart")
                        .HasColumnType("interval");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("EndAddressId")
                        .HasColumnType("integer");

                    b.Property<double[]>("EndCoordinates")
                        .HasColumnType("double precision[]");

                    b.Property<bool>("Selected")
                        .HasColumnType("boolean");

                    b.Property<int>("StartAddressId")
                        .HasColumnType("integer");

                    b.Property<double[]>("StartCoordinates")
                        .HasColumnType("double precision[]");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ValidityEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ValidityStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("VehicleProfile")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("WorkEnd")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("WorkStart")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.HasIndex("EndAddressId")
                        .IsUnique();

                    b.HasIndex("StartAddressId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("FidaVehicles");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Route.RouteAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<int?>("FidaVeichleId")
                        .HasColumnType("integer");

                    b.Property<string>("Locality")
                        .HasColumnType("text");

                    b.Property<string>("Postalcode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FidaVeichleId");

                    b.ToTable("RouteAddress");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Route.RouteAddressMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AddressMapFieldName")
                        .HasColumnType("text");

                    b.Property<string>("CountryMapFieldName")
                        .HasColumnType("text");

                    b.Property<string>("LocalityMapFieldName")
                        .HasColumnType("text");

                    b.Property<string>("PostalcodeMapFieldName")
                        .HasColumnType("text");

                    b.Property<int?>("TmkTemplateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TmkTemplateId")
                        .IsUnique();

                    b.ToTable("RouteAddressMap");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.System.Tracer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatorName")
                        .HasColumnType("text");

                    b.Property<int?>("CsvMapTemplateId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifierName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("TmkSheetTemplateId")
                        .HasColumnType("integer");

                    b.Property<int?>("WorkSheetAssignmentId")
                        .HasColumnType("integer");

                    b.Property<int?>("WorkSheetId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CsvMapTemplateId");

                    b.HasIndex("TmkSheetTemplateId");

                    b.HasIndex("WorkSheetAssignmentId");

                    b.HasIndex("WorkSheetId");

                    b.ToTable("Tracer");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int?>("BccEmailMessageId")
                        .HasColumnType("integer");

                    b.Property<int?>("BccWtEmailMessageId")
                        .HasColumnType("integer");

                    b.Property<int?>("CcEmailMessageId")
                        .HasColumnType("integer");

                    b.Property<int?>("CcWtEmailMessageId")
                        .HasColumnType("integer");

                    b.Property<int?>("ContactId")
                        .HasColumnType("integer");

                    b.Property<int?>("FromEmailMessageId")
                        .HasColumnType("integer");

                    b.Property<int?>("FromWtEmailMessageId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ReplyToEmailMessageId")
                        .HasColumnType("integer");

                    b.Property<int?>("ToEmailMessageId")
                        .HasColumnType("integer");

                    b.Property<int?>("ToWtEmailMessageId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BccEmailMessageId");

                    b.HasIndex("BccWtEmailMessageId");

                    b.HasIndex("CcEmailMessageId");

                    b.HasIndex("CcWtEmailMessageId");

                    b.HasIndex("ContactId");

                    b.HasIndex("FromEmailMessageId");

                    b.HasIndex("FromWtEmailMessageId");

                    b.HasIndex("ReplyToEmailMessageId");

                    b.HasIndex("ToEmailMessageId");

                    b.HasIndex("ToWtEmailMessageId");

                    b.ToTable("EmailAddress");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("EmailMessageId")
                        .HasColumnType("integer");

                    b.Property<int?>("EmailTemplateId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("FileDataBytes")
                        .HasColumnType("bytea");

                    b.Property<string>("FileFullPath")
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("FileNameUrl")
                        .HasColumnType("text");

                    b.Property<string>("FileUrl")
                        .HasColumnType("text");

                    b.Property<string>("MediaSubType")
                        .HasColumnType("text");

                    b.Property<string>("MediaType")
                        .HasColumnType("text");

                    b.Property<int?>("WtEmailId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmailMessageId");

                    b.HasIndex("EmailTemplateId");

                    b.HasIndex("WtEmailId");

                    b.ToTable("EmailAttachments");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Date")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("EmailMessageId")
                        .HasColumnType("integer");

                    b.Property<string>("Event")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EventRegistrationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("From")
                        .HasColumnType("text");

                    b.Property<string>("Ip")
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<string>("MessageId")
                        .HasColumnType("text");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<string>("Tag")
                        .HasColumnType("text");

                    b.Property<long?>("TemplateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmailMessageId");

                    b.ToTable("EmailEvents");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EmailMessageId")
                        .HasColumnType("integer");

                    b.Property<string>("Field")
                        .HasColumnType("text");

                    b.Property<int>("HeaderId")
                        .HasColumnType("integer");

                    b.Property<long?>("Offset")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RawField")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("RawValue")
                        .HasColumnType("bytea");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmailMessageId");

                    b.ToTable("EmailHeaders");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Importance")
                        .HasColumnType("integer");

                    b.Property<string>("InReplyTo")
                        .HasColumnType("text");

                    b.Property<bool>("IsHtml")
                        .HasColumnType("boolean");

                    b.Property<int>("MessageDirection")
                        .HasColumnType("integer");

                    b.Property<string>("MessageId")
                        .HasColumnType("text");

                    b.Property<List<string>>("MessageIds")
                        .HasColumnType("text[]");

                    b.Property<bool>("NeedDeliveredReceipt")
                        .HasColumnType("boolean");

                    b.Property<bool>("NeedReadReceipt")
                        .HasColumnType("boolean");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("Sender")
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EmailMessages");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailMessageFlag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EmailMessageId")
                        .HasColumnType("integer");

                    b.Property<int>("MessageFlag")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmailMessageId");

                    b.ToTable("EmailMessageFlag");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailMessageId", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("EmailMessageParentId")
                        .HasColumnType("integer");

                    b.Property<string>("MessageId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmailMessageParentId");

                    b.ToTable("EmailMessageId");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<string>("ClassDataSource")
                        .HasColumnType("text");

                    b.Property<bool>("NeedDeliveredReceipt")
                        .HasColumnType("boolean");

                    b.Property<bool>("NeedReadReceipt")
                        .HasColumnType("boolean");

                    b.Property<bool>("Shared")
                        .HasColumnType("boolean");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<string>("TemplateName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailUid", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("EmailMessageId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsValid")
                        .HasColumnType("boolean");

                    b.Property<long>("UidId")
                        .HasColumnType("bigint");

                    b.Property<long>("Validity")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("EmailUid");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailVerificationResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Accept_all")
                        .HasColumnType("boolean");

                    b.Property<string>("Did_you_mean")
                        .HasColumnType("text");

                    b.Property<bool>("Disposable")
                        .HasColumnType("boolean");

                    b.Property<string>("Domain")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("Free")
                        .HasColumnType("boolean");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("Mx_domain")
                        .HasColumnType("text");

                    b.Property<string>("Mx_record")
                        .HasColumnType("text");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<string>("Result")
                        .HasColumnType("text");

                    b.Property<bool>("Role")
                        .HasColumnType("boolean");

                    b.Property<bool>("Safe_to_send")
                        .HasColumnType("boolean");

                    b.Property<bool>("Success")
                        .HasColumnType("boolean");

                    b.Property<string>("User")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EmailVerificationResponse");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Language.BaseLangCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("KeyText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BaseLangCodes");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Language.LangTransPage", b =>
                {
                    b.Property<int>("PageId")
                        .HasColumnType("integer");

                    b.Property<int>("langTranslationId")
                        .HasColumnType("integer");

                    b.HasKey("PageId", "langTranslationId");

                    b.HasIndex("langTranslationId");

                    b.ToTable("LangTransPage");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Language.LangTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BaseLangId")
                        .HasColumnType("integer");

                    b.Property<int>("LangCodeId")
                        .HasColumnType("integer");

                    b.Property<string>("Translation")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BaseLangId");

                    b.HasIndex("LangCodeId");

                    b.ToTable("LangTranslations");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Language.LanguageCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LanguageCodes");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Email.Verification.VerifiedEmail", b =>
                {
                    b.HasOne("FidaBlazorUI_Share.Models.Email.EmailVerificationResponse", "VerificationResponse")
                        .WithMany()
                        .HasForeignKey("VerificationResponseId");

                    b.Navigation("VerificationResponse");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.Login.OldPassword", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", null)
                        .WithMany("oldPasswords")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.PhoneNumber", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Contact", "Contact")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", "User")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Contact");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.User", b =>
                {
                    b.HasOne("FidaBlazorUI_Share.Models.Language.LanguageCode", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.UserAddress", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Lead", "Lead")
                        .WithOne("LeadAddress")
                        .HasForeignKey("FidaBlazorNet6.Shared.Models.Account.UserAddress", "LeadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", "User")
                        .WithMany("Adresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Lead");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.UserIdentityNumber", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", "User")
                        .WithMany("IdentityNumbers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.UserMailAddress", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", "User")
                        .WithMany("SecondaryEMailAddresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.UserProfile", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", "ApplicationUser")
                        .WithOne("Profile")
                        .HasForeignKey("FidaBlazorNet6.Shared.Models.Account.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.UserRole", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Csv.CsvTempItem", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Csv.CsvMapTemplate", "MapTemplate")
                        .WithMany("CsvMaps")
                        .HasForeignKey("MapTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MapTemplate");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.General.Reports.Report", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.General.Reports.ReportChartSeries", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.General.Reports.Report", "Report")
                        .WithMany("ChartSeriesList")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.General.Reports.ReportRole", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.General.Reports.Report", "Report")
                        .WithMany("ReportRoles")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.Role", "Role")
                        .WithMany("ReportRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Contact", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Lead", "Lead")
                        .WithMany("Contacts")
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.ProtocolTemplate", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkSheetTemplate", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskAutomation.TaskAutomation", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.WorkTask", "WorkTask")
                        .WithMany("TaskAutomations")
                        .HasForeignKey("WorkTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkTask");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskAutomation.TaskAutomationTemplate", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskTemplates.WorkTaskTemplate", "WorkTask")
                        .WithMany("TaskAutomations")
                        .HasForeignKey("WorkTaskTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkTask");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskAutomation.WorkTasksActions.WT_Action", b =>
                {
                    b.HasOne("FidaBlazorUI_Share.Models.Email.EmailMessage", "EmailMessage")
                        .WithOne()
                        .HasForeignKey("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskAutomation.WorkTasksActions.WT_Action", "EmailMessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskAutomation.TaskAutomation", "TaskAutomation")
                        .WithMany("TriggeredActions")
                        .HasForeignKey("TaskAutomationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailMessage");

                    b.Navigation("TaskAutomation");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskAutomation.WorkTasksActions.WT_ActionTemplate", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskAutomation.TaskAutomationTemplate", "TaskAutomation")
                        .WithMany("TriggeredActions")
                        .HasForeignKey("TaskAutomationTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskAutomation");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskTemplates.TaskDropItemTemplate", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskTemplates.TaskFieldTemplate", "TaskField")
                        .WithMany("DropSelectItems")
                        .HasForeignKey("TaskFieldTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskField");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskTemplates.TaskFieldTemplate", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskTemplates.WorkTaskTemplate", "WorkTaskTemplate")
                        .WithMany("TaskFields")
                        .HasForeignKey("WorkTaskTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkTaskTemplate");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskTemplates.WorkTaskTemplate", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkSheetTemplate", "TmkSheetTemplate")
                        .WithMany("WorkTaskTemplates")
                        .HasForeignKey("TmkSheetTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TmkSheetTemplate");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.TaskField", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.WorkTask", "WorkTask")
                        .WithMany("TaskFields")
                        .HasForeignKey("WorkTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkTask");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.WT_Email.WtEmail", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.WorkTask", "WorkTask")
                        .WithOne("WtEmailMessage")
                        .HasForeignKey("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.WT_Email.WtEmail", "WorkTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkTask");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.WorkTask", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskTemplates.WorkTaskTemplate", "Template")
                        .WithMany("WorkTasks")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", "User")
                        .WithMany("WorkTasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheet", "WorkSheet")
                        .WithMany("WorkTasks")
                        .HasForeignKey("WorkSheetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Template");

                    b.Navigation("User");

                    b.Navigation("WorkSheet");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasksGeneralParameters.WorkTaskParameter", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", "User")
                        .WithMany("WorkTaskParameters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasksGeneralParameters.WorkWindow", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasksGeneralParameters.WorkTaskParameter", "WorkTaskParameter")
                        .WithMany("DayWorkWindows")
                        .HasForeignKey("WorkTaskParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkTaskParameter");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.AssignmentReason", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkSheetTemplate", "TmkSheetTemplate")
                        .WithMany("AssignmentReasons")
                        .HasForeignKey("TmkSheetTemplateId");

                    b.Navigation("TmkSheetTemplate");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.Layout.TmkLayoutColumn", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.Layout.TmkLayoutRow", "LayoutRow")
                        .WithMany("LayoutColumns")
                        .HasForeignKey("LayoutRowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LayoutRow");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.Layout.TmkLayoutRow", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.Layout.TmkLayoutTemplate", "TmkLayout")
                        .WithMany("LayoutRows")
                        .HasForeignKey("TmkLayoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TmkLayout");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.Layout.TmkLayoutTemplate", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkSheetTemplate", "TmkTemplate")
                        .WithMany("LayoutTemplates")
                        .HasForeignKey("TmkTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TmkTemplate");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkFieldSelectValue", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkSheetField", "TmkSheetField")
                        .WithMany("SelectItems")
                        .HasForeignKey("TmkSheetFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TmkSheetField");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkSheetField", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkSheetTemplate", "SheetTemplate")
                        .WithMany("Fields")
                        .HasForeignKey("SheetTemplateId");

                    b.Navigation("SheetTemplate");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkSheetTemplate", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.ProtocolTemplate", "ProtocolNumberTemplate")
                        .WithMany()
                        .HasForeignKey("ProtNumTempId");

                    b.HasOne("FidaBlazorNet6.Shared.Models.Route.RouteAddressMap", "RouteAddressMap")
                        .WithMany()
                        .HasForeignKey("RouteAddressMapId");

                    b.Navigation("ProtocolNumberTemplate");

                    b.Navigation("RouteAddressMap");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkTemplateRole", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.Role", "Role")
                        .WithMany("TmkTemplateRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkSheetTemplate", "TmkSheetTemplate")
                        .WithMany("Roles")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("TmkSheetTemplate");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheetAssignment", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", "Assignee")
                        .WithMany("WorkSheetAssignments")
                        .HasForeignKey("AssigneeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheet", "WorkSheet")
                        .WithMany("WorkSheetAssignments")
                        .HasForeignKey("WorkSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignee");

                    b.Navigation("WorkSheet");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheetField", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheet", "WorkSheet")
                        .WithMany("Fields")
                        .HasForeignKey("WorkSheetId");

                    b.Navigation("WorkSheet");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheetFieldSelectItem", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheetField", "WorkSheetField")
                        .WithMany("SelectItems")
                        .HasForeignKey("WorkSheetFieldId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("WorkSheetField");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Menus.AppDynamicNavMenu", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", "ApplicationUser")
                        .WithOne("AppDynamicNavMenu")
                        .HasForeignKey("FidaBlazorNet6.Shared.Models.Menus.AppDynamicNavMenu", "AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Menus.NavMenuItem", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Menus.AppDynamicNavMenu", null)
                        .WithMany("MenuItems")
                        .HasForeignKey("AppDynamicNavMenuAppId");

                    b.HasOne("FidaBlazorNet6.Shared.Models.Menus.SubMenuHeader", "SubMenuHeader")
                        .WithOne("NavMenuItem")
                        .HasForeignKey("FidaBlazorNet6.Shared.Models.Menus.NavMenuItem", "AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FidaBlazorNet6.Shared.Models.Menus.SubMenuList", null)
                        .WithMany("Items")
                        .HasForeignKey("SubMenuListAppId");

                    b.Navigation("SubMenuHeader");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Menus.SubMenu", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Menus.AppDynamicNavMenu", null)
                        .WithMany("SubMenus")
                        .HasForeignKey("AppDynamicNavMenuAppId");

                    b.HasOne("FidaBlazorNet6.Shared.Models.Menus.SubMenuList", null)
                        .WithMany("SubMenus")
                        .HasForeignKey("SubMenuListAppId1");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Menus.SubMenuHeader", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Menus.SubMenu", "SubMenu")
                        .WithOne("SubMenuHeader")
                        .HasForeignKey("FidaBlazorNet6.Shared.Models.Menus.SubMenuHeader", "AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubMenu");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Menus.SubMenuList", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Menus.SubMenu", "SubMenu")
                        .WithOne("SubMenuList")
                        .HasForeignKey("FidaBlazorNet6.Shared.Models.Menus.SubMenuList", "AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubMenu");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Route.FidaUserRouteToken", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", "User")
                        .WithOne("RouteToken")
                        .HasForeignKey("FidaBlazorNet6.Shared.Models.Route.FidaUserRouteToken", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Route.FidaVehicle", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Route.RouteAddress", "EndAddress")
                        .WithOne()
                        .HasForeignKey("FidaBlazorNet6.Shared.Models.Route.FidaVehicle", "EndAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FidaBlazorNet6.Shared.Models.Route.RouteAddress", "StartAddress")
                        .WithOne()
                        .HasForeignKey("FidaBlazorNet6.Shared.Models.Route.FidaVehicle", "StartAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", "User")
                        .WithMany("FidaVehicles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EndAddress");

                    b.Navigation("StartAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Route.RouteAddress", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Route.FidaVehicle", "FidaVeichle")
                        .WithMany()
                        .HasForeignKey("FidaVeichleId");

                    b.Navigation("FidaVeichle");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Route.RouteAddressMap", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkSheetTemplate", "TmkTemplate")
                        .WithOne()
                        .HasForeignKey("FidaBlazorNet6.Shared.Models.Route.RouteAddressMap", "TmkTemplateId");

                    b.Navigation("TmkTemplate");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.System.Tracer", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Csv.CsvMapTemplate", null)
                        .WithMany("Tracers")
                        .HasForeignKey("CsvMapTemplateId");

                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkSheetTemplate", null)
                        .WithMany("Tracers")
                        .HasForeignKey("TmkSheetTemplateId");

                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheetAssignment", null)
                        .WithMany("Tracers")
                        .HasForeignKey("WorkSheetAssignmentId");

                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheet", null)
                        .WithMany("Tracers")
                        .HasForeignKey("WorkSheetId");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailAddress", b =>
                {
                    b.HasOne("FidaBlazorUI_Share.Models.Email.EmailMessage", "BccEmailMessage")
                        .WithMany("BccAddresses")
                        .HasForeignKey("BccEmailMessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.WT_Email.WtEmail", null)
                        .WithMany("BccAddresses")
                        .HasForeignKey("BccWtEmailMessageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FidaBlazorUI_Share.Models.Email.EmailMessage", "CcEmailMessage")
                        .WithMany("CcAddresses")
                        .HasForeignKey("CcEmailMessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.WT_Email.WtEmail", null)
                        .WithMany("CcAddresses")
                        .HasForeignKey("CcWtEmailMessageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Contact", null)
                        .WithMany("Emails")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FidaBlazorUI_Share.Models.Email.EmailMessage", "FromEmailMessage")
                        .WithMany("FromAddresses")
                        .HasForeignKey("FromEmailMessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.WT_Email.WtEmail", null)
                        .WithMany("FromAddresses")
                        .HasForeignKey("FromWtEmailMessageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FidaBlazorUI_Share.Models.Email.EmailMessage", "ReplyToEmailMessage")
                        .WithMany("ReplyTo")
                        .HasForeignKey("ReplyToEmailMessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FidaBlazorUI_Share.Models.Email.EmailMessage", "ToEmailMessage")
                        .WithMany("ToAddresses")
                        .HasForeignKey("ToEmailMessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.WT_Email.WtEmail", null)
                        .WithMany("ToAddresses")
                        .HasForeignKey("ToWtEmailMessageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BccEmailMessage");

                    b.Navigation("CcEmailMessage");

                    b.Navigation("FromEmailMessage");

                    b.Navigation("ReplyToEmailMessage");

                    b.Navigation("ToEmailMessage");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailAttachment", b =>
                {
                    b.HasOne("FidaBlazorUI_Share.Models.Email.EmailMessage", "EmailMessage")
                        .WithMany("Attachments")
                        .HasForeignKey("EmailMessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FidaBlazorUI_Share.Models.Email.EmailTemplate", "EmailTemplate")
                        .WithMany("Attachments")
                        .HasForeignKey("EmailTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.WT_Email.WtEmail", null)
                        .WithMany("Attachments")
                        .HasForeignKey("WtEmailId");

                    b.Navigation("EmailMessage");

                    b.Navigation("EmailTemplate");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailEvent", b =>
                {
                    b.HasOne("FidaBlazorUI_Share.Models.Email.EmailMessage", "EmailMessage")
                        .WithMany("EmailEvents")
                        .HasForeignKey("EmailMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailMessage");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailHeader", b =>
                {
                    b.HasOne("FidaBlazorUI_Share.Models.Email.EmailMessage", "EmailMessage")
                        .WithMany("Headers")
                        .HasForeignKey("EmailMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailMessage");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailMessage", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", null)
                        .WithMany("EmailMessages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailMessageFlag", b =>
                {
                    b.HasOne("FidaBlazorUI_Share.Models.Email.EmailMessage", "EmailMessage")
                        .WithMany("MessageFlags")
                        .HasForeignKey("EmailMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailMessage");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailMessageId", b =>
                {
                    b.HasOne("FidaBlazorUI_Share.Models.Email.EmailMessage", "EmailMessage")
                        .WithMany("References")
                        .HasForeignKey("EmailMessageParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailMessage");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailTemplate", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", null)
                        .WithMany("EmailTemplates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailUid", b =>
                {
                    b.HasOne("FidaBlazorUI_Share.Models.Email.EmailMessage", "EmailMessage")
                        .WithOne("Uid")
                        .HasForeignKey("FidaBlazorUI_Share.Models.Email.EmailUid", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailMessage");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Language.LangTransPage", b =>
                {
                    b.HasOne("FidaBlazorUI_Share.Models.Page", "Page")
                        .WithMany("LangTransPages")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FidaBlazorUI_Share.Models.Language.LangTranslation", "LangTranslation")
                        .WithMany("LangTransPages")
                        .HasForeignKey("langTranslationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LangTranslation");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Language.LangTranslation", b =>
                {
                    b.HasOne("FidaBlazorUI_Share.Models.Language.BaseLangCode", "BaseLang")
                        .WithMany("LangTranslations")
                        .HasForeignKey("BaseLangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FidaBlazorUI_Share.Models.Language.LanguageCode", "LangCode")
                        .WithMany("LangTranslations")
                        .HasForeignKey("LangCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseLang");

                    b.Navigation("LangCode");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("FidaBlazorNet6.Shared.Models.Account.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.Role", b =>
                {
                    b.Navigation("ReportRoles");

                    b.Navigation("TmkTemplateRoles");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Account.User", b =>
                {
                    b.Navigation("Adresses");

                    b.Navigation("AppDynamicNavMenu");

                    b.Navigation("EmailMessages");

                    b.Navigation("EmailTemplates");

                    b.Navigation("FidaVehicles");

                    b.Navigation("IdentityNumbers");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("Profile");

                    b.Navigation("Reports");

                    b.Navigation("RouteToken");

                    b.Navigation("SecondaryEMailAddresses");

                    b.Navigation("UserRoles");

                    b.Navigation("WorkSheetAssignments");

                    b.Navigation("WorkTaskParameters");

                    b.Navigation("WorkTasks");

                    b.Navigation("oldPasswords");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Csv.CsvMapTemplate", b =>
                {
                    b.Navigation("CsvMaps");

                    b.Navigation("Tracers");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.General.Reports.Report", b =>
                {
                    b.Navigation("ChartSeriesList");

                    b.Navigation("ReportRoles");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Contact", b =>
                {
                    b.Navigation("Emails");

                    b.Navigation("PhoneNumbers");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Lead", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("LeadAddress");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskAutomation.TaskAutomation", b =>
                {
                    b.Navigation("TriggeredActions");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskAutomation.TaskAutomationTemplate", b =>
                {
                    b.Navigation("TriggeredActions");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskTemplates.TaskFieldTemplate", b =>
                {
                    b.Navigation("DropSelectItems");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTaskTemplates.WorkTaskTemplate", b =>
                {
                    b.Navigation("TaskAutomations");

                    b.Navigation("TaskFields");

                    b.Navigation("WorkTasks");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.WT_Email.WtEmail", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("BccAddresses");

                    b.Navigation("CcAddresses");

                    b.Navigation("FromAddresses");

                    b.Navigation("ToAddresses");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasks.WorkTask", b =>
                {
                    b.Navigation("TaskAutomations");

                    b.Navigation("TaskFields");

                    b.Navigation("WtEmailMessage");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.Tasks.WorkTasksGeneralParameters.WorkTaskParameter", b =>
                {
                    b.Navigation("DayWorkWindows");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.Layout.TmkLayoutRow", b =>
                {
                    b.Navigation("LayoutColumns");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.Layout.TmkLayoutTemplate", b =>
                {
                    b.Navigation("LayoutRows");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkSheetField", b =>
                {
                    b.Navigation("SelectItems");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.TmkSheetTemplates.TmkSheetTemplate", b =>
                {
                    b.Navigation("AssignmentReasons");

                    b.Navigation("Fields");

                    b.Navigation("LayoutTemplates");

                    b.Navigation("Roles");

                    b.Navigation("Tracers");

                    b.Navigation("WorkTaskTemplates");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheet", b =>
                {
                    b.Navigation("Fields");

                    b.Navigation("Tracers");

                    b.Navigation("WorkSheetAssignments");

                    b.Navigation("WorkTasks");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheetAssignment", b =>
                {
                    b.Navigation("Tracers");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Leads.WorkSheets.WorkSheetField", b =>
                {
                    b.Navigation("SelectItems");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Menus.AppDynamicNavMenu", b =>
                {
                    b.Navigation("MenuItems");

                    b.Navigation("SubMenus");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Menus.SubMenu", b =>
                {
                    b.Navigation("SubMenuHeader");

                    b.Navigation("SubMenuList");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Menus.SubMenuHeader", b =>
                {
                    b.Navigation("NavMenuItem");
                });

            modelBuilder.Entity("FidaBlazorNet6.Shared.Models.Menus.SubMenuList", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("SubMenus");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailMessage", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("BccAddresses");

                    b.Navigation("CcAddresses");

                    b.Navigation("EmailEvents");

                    b.Navigation("FromAddresses");

                    b.Navigation("Headers");

                    b.Navigation("MessageFlags");

                    b.Navigation("References");

                    b.Navigation("ReplyTo");

                    b.Navigation("ToAddresses");

                    b.Navigation("Uid");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Email.EmailTemplate", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Language.BaseLangCode", b =>
                {
                    b.Navigation("LangTranslations");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Language.LangTranslation", b =>
                {
                    b.Navigation("LangTransPages");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Language.LanguageCode", b =>
                {
                    b.Navigation("LangTranslations");
                });

            modelBuilder.Entity("FidaBlazorUI_Share.Models.Page", b =>
                {
                    b.Navigation("LangTransPages");
                });
#pragma warning restore 612, 618
        }
    }
}
